This is a random short term todo list. Items written here are subject to discussion.
Feel free to ask on nemiver-list@gna.org about particular topics that you may be interested to take over.

1) Once attached to the debugger, popup a dialog telling the user she can set breakpoints before hiting the "run" button.
That dialog can propose to open files to set the breakpoints.

2) Display a nice "where-marker" for the cases where the classical "where-marker" (the arrow) and the breakpoint marker (the red circle)
   are on the same line. Today, this is not precisely handled so it looks very ugly.

3) write a gdb command interpreter widget (prolly based on Gtk::TextView), using IDebugger. It should accept commands with the same syntax as the classical
   gdb syntax and call IDebugger in the background.

4) finish the variable visualization widget so that it shows global variables as well.

5) when the user clicks in the "markers region" of the source editor, that should set/unset a breakpoint on that line.

6) Make what's in the "debug" menu show up in a contextual menu (the menu that pops up when the user right clicks on the source editor)

7) Add IDebugger::state_changed () signal to notify when the debugger changes its states (RUNNING or READY, basically) .
